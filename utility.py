#coding:utf-8import inspectfrom google.appengine.api import memcacheimport loggingdef cacheV2(key_pattern, expire=3600):    def deco(f):        arg_names, varargs, varkw, defaults = inspect.getargspec(f)        if varargs or varkw:            raise Exception("not support varargs")        def _(*a, **kw):            param = dict(zip(arg_names,a))            key = key_pattern            for k,v in param.items():                key = key.replace('{'+str(k)+'}',str(v))            for k,v in kw.items():                key = key.replace('{'+str(k)+'}',str(v))            val = memcache.get(key)            if val is None:                val = f(*a, **kw)                memcache.set(key,val,expire)                logging.info("Set Cache Key :%s is ok "% (key))            else:                logging.info("get Cache Key :%s is ok "% (key))            return val        return _    return decoif __name__ =='__main__':    print a('yibin',31)